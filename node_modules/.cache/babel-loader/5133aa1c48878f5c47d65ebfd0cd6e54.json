{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\smital.deopurkar\\\\Desktop\\\\training\\\\TableAssignment-master\\\\TableAssignment-master\\\\src\\\\components\\\\TablePagination.js\";\nimport React, { Fragment } from 'react';\n\nconst TablePagination = ({\n  currentPage,\n  pages,\n  setPage,\n  pageLimit\n}) => {\n  const numPages = Math.ceil(pages / pageLimit);\n\n  const getPaginationNumbers = () => {\n    const blocks = [];\n\n    for (let i = 0; i < numPages; i++) {\n      blocks.push(i);\n    }\n\n    return blocks;\n  };\n\n  const renderPageBlocks = () => {\n    const getPageNumbers = getPaginationNumbers();\n    return getPageNumbers.map(pageNum => /*#__PURE__*/_jsxDEV(\"a\", {\n      onClick: () => setPage(pageNum),\n      children: pageNum === currentPage ? pageNum + 1 : \"\"\n    }, pageNum, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this));\n  };\n\n  const goToPrevPage = () => {\n    if (currentPage > 0) {\n      setPage(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (currentPage < numPages - 1) {\n      setPage(currentPage + 1);\n    }\n  };\n\n  const renderPrevPageBlocks = () => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: goToPrevPage,\n        children: \"\\u2190\"\n      }, \"prev-page\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderNextPageBlocks = () => {\n    return /*#__PURE__*/_jsxDEV(Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: goToNextPage,\n        children: \"\\u2192\"\n      }, \"next-page\", false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"prev\",\n      children: [\" \", renderPrevPageBlocks()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"pagination\",\n      children: [\"   Showing \", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"pagenum\",\n        children: [renderPageBlocks(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 39\n      }, this), \"of\", /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"pagenum\",\n        children: [\" \", numPages]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 91\n      }, this), \" results\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"next\",\n      children: [\" \", renderNextPageBlocks()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_c = TablePagination;\nexport default TablePagination;\n\nvar _c;\n\n$RefreshReg$(_c, \"TablePagination\");","map":{"version":3,"sources":["C:/Users/smital.deopurkar/Desktop/training/TableAssignment-master/TableAssignment-master/src/components/TablePagination.js"],"names":["React","Fragment","TablePagination","currentPage","pages","setPage","pageLimit","numPages","Math","ceil","getPaginationNumbers","blocks","i","push","renderPageBlocks","getPageNumbers","map","pageNum","goToPrevPage","goToNextPage","renderPrevPageBlocks","renderNextPageBlocks"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAIA,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA,OAAtB;AAA+BC,EAAAA;AAA/B,CAAD,KAAgD;AACtE,QAAMC,QAAQ,GAAGC,IAAI,CAACC,IAAL,CAAUL,KAAK,GAAGE,SAAlB,CAAjB;;AAEA,QAAMI,oBAAoB,GAAG,MAAM;AACjC,UAAMC,MAAM,GAAG,EAAf;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGL,QAApB,EAA8BK,CAAC,EAA/B,EAAmC;AACjCD,MAAAA,MAAM,CAACE,IAAP,CAAYD,CAAZ;AACD;;AACD,WAAOD,MAAP;AACD,GAND;;AAQA,QAAMG,gBAAgB,GAAG,MAAM;AAC7B,UAAMC,cAAc,GAAGL,oBAAoB,EAA3C;AAEA,WAAOK,cAAc,CAACC,GAAf,CAAmBC,OAAO,iBAC/B;AAGE,MAAA,OAAO,EAAE,MAAMZ,OAAO,CAACY,OAAD,CAHxB;AAAA,gBAMCA,OAAO,KAAKd,WAAZ,GAA2Bc,OAAO,GAAC,CAAnC,GAAyC;AAN1C,OACOA,OADP;AAAA;AAAA;AAAA;AAAA,YADK,CAAP;AAUD,GAbD;;AAeA,QAAMC,YAAY,GAAG,MAAM;AACzB,QAAIf,WAAW,GAAG,CAAlB,EAAqB;AACnBE,MAAAA,OAAO,CAACF,WAAW,GAAG,CAAf,CAAP;AACD;AACF,GAJD;;AAMA,QAAMgB,YAAY,GAAG,MAAM;AACzB,QAAIhB,WAAW,GAAGI,QAAQ,GAAG,CAA7B,EAAgC;AAC9BF,MAAAA,OAAO,CAACF,WAAW,GAAG,CAAf,CAAP;AACD;AACF,GAJD;;AAMA,QAAMiB,oBAAoB,GAAG,MAAM;AACjC,wBACE,QAAC,QAAD;AAAA,6BACE;AAAmB,QAAA,OAAO,EAAEF,YAA5B;AAAA;AAAA,SAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA,QAAMG,oBAAoB,GAAG,MAAM;AACjC,wBACE,QAAC,QAAD;AAAA,6BACE;AAAmB,QAAA,OAAO,EAAEF,YAA5B;AAAA;AAAA,SAAO,WAAP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND;;AAQA,sBACE;AAAA,4BACA;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAA,sBAAqBC,oBAAoB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,eAEF;AAAM,MAAA,KAAK,EAAC,YAAZ;AAAA,6CAAoC;AAAM,QAAA,KAAK,EAAC,SAAZ;AAAA,mBAAuBN,gBAAgB,EAAvC;AAAA;AAAA;AAAA;AAAA;AAAA,cAApC,qBAAwF;AAAM,QAAA,KAAK,EAAC,SAAZ;AAAA,wBAAwBP,QAAxB;AAAA;AAAA;AAAA;AAAA;AAAA,cAAxF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFE,eAGC;AAAM,MAAA,KAAK,EAAC,MAAZ;AAAA,sBAAqBc,oBAAoB,EAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YAHD;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CA7DD;;KAAMnB,e;AA+DN,eAAeA,eAAf","sourcesContent":["import React, { Fragment } from 'react';\n\n\n\nconst TablePagination = ({ currentPage, pages, setPage, pageLimit }) => {\n  const numPages = Math.ceil(pages / pageLimit);\n\n  const getPaginationNumbers = () => {\n    const blocks = [];\n    for (let i = 0; i < numPages; i++) {\n      blocks.push(i);\n    }\n    return blocks;\n  };\n  \n  const renderPageBlocks = () => {\n    const getPageNumbers = getPaginationNumbers();\n    \n    return getPageNumbers.map(pageNum =>\n      <a \n        key={pageNum} \n\n        onClick={() => setPage(pageNum)}\n       \n      >\n      {pageNum === currentPage ? (pageNum+1)  : \"\"}\n      </a>\n    );\n  };\n\n  const goToPrevPage = () => {\n    if (currentPage > 0) {\n      setPage(currentPage - 1);\n    }\n  };\n\n  const goToNextPage = () => {\n    if (currentPage < numPages - 1) {\n      setPage(currentPage + 1);\n    }\n  };\n\n  const renderPrevPageBlocks = () => {\n    return (\n      <Fragment>\n        <a key=\"prev-page\" onClick={goToPrevPage}>&#8592;</a>\n      </Fragment>\n    )\n  };\n\n  const renderNextPageBlocks = () => {\n    return (\n      <Fragment>\n        <a key=\"next-page\" onClick={goToNextPage}>&rarr;</a>\n      </Fragment>\n    )\n  };\n\n  return (\n    <div >\n    <span class=\"prev\"> {renderPrevPageBlocks()}</span> \n  <span class=\"pagination\">   Showing <span class=\"pagenum\">{renderPageBlocks()} </span>of<span class=\"pagenum\"> {numPages}</span> results</span>\n     <span class=\"next\"> {renderNextPageBlocks()}</span> \n    </div>\n  );\n}\n\nexport default TablePagination;"]},"metadata":{},"sourceType":"module"}