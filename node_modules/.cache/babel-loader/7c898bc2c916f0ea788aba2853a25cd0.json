{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\smital.deopurkar\\\\Desktop\\\\training\\\\TableAssignment-master\\\\TableAssignment-master\\\\src\\\\components\\\\CheckBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\nconst styles = {\n  main: {\n    width: \"30%\",\n    background: \"#F2F1F9\",\n    border: \"none\",\n    padding: \"0.5rem\"\n  },\n  searchIcon: {\n    height: 30,\n    border: \"none\",\n    cursor: \"pointer\"\n  }\n};\n\nconst CheckBox = ({\n  setValue,\n  placeholder,\n  classes\n}) => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const typeArray = ['small', 'medium', 'large', 'heliport'];\n\n  const renderTypeOptions = () => ['all', ...typeArray];\n\n  const handleFilterChange = e => {\n    if (e.target.checked) setValue(e.target.value);else setValue(query);\n  };\n\n  return typeArray.map(filter => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: filter.id,\n      children: filter.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: filter.id,\n      value: filter.type,\n      placeholder: placeholder,\n      onClick: handleFilterChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 7\n  }, this));\n};\n\n_s(CheckBox, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["C:/Users/smital.deopurkar/Desktop/training/TableAssignment-master/TableAssignment-master/src/components/CheckBox.js"],"names":["React","useState","Fragment","classNames","withStyles","styles","main","width","background","border","padding","searchIcon","height","cursor","CheckBox","setValue","placeholder","classes","query","setQuery","typeArray","renderTypeOptions","handleFilterChange","e","target","checked","value","map","filter","id","type"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAC,KADF;AAEJC,IAAAA,UAAU,EAAC,SAFP;AAGJC,IAAAA,MAAM,EAAC,MAHH;AAIJC,IAAAA,OAAO,EAAC;AAJJ,GADO;AAObC,EAAAA,UAAU,EAAE;AACVC,IAAAA,MAAM,EAAE,EADE;AAEVH,IAAAA,MAAM,EAAE,MAFE;AAGVI,IAAAA,MAAM,EAAE;AAHE;AAPC,CAAf;;AAcA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AAAA;;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBlB,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAMmB,SAAS,GAAC,CACd,OADc,EAEd,QAFc,EAGd,OAHc,EAId,UAJc,CAAhB;;AAOA,QAAMC,iBAAiB,GAAG,MAAM,CAAC,KAAD,EAAQ,GAAGD,SAAX,CAAhC;;AAKA,QAAME,kBAAkB,GAAGC,CAAC,IAAI;AAE5B,QAAGA,CAAC,CAACC,MAAF,CAASC,OAAZ,EACAV,QAAQ,CAACQ,CAAC,CAACC,MAAF,CAASE,KAAV,CAAR,CADA,KAGAX,QAAQ,CAACG,KAAD,CAAR;AAED,GAPH;;AASA,SACEE,SAAS,CAACO,GAAV,CAAcC,MAAM,iBAClB,QAAC,QAAD;AAAA,4BACA;AAAO,MAAA,OAAO,EAAEA,MAAM,CAACC,EAAvB;AAAA,gBAA4BD,MAAM,CAACE;AAAnC;AAAA;AAAA;AAAA;AAAA,YADA,eAEA;AAAO,MAAA,IAAI,EAAC,UAAZ;AACA,MAAA,EAAE,EAAEF,MAAM,CAACC,EADX;AAEE,MAAA,KAAK,EAAED,MAAM,CAACE,IAFhB;AAGE,MAAA,WAAW,EAAEd,WAHf;AAIE,MAAA,OAAO,EAAEM;AAJX;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAgBD,CAxCD;;GAAMR,Q;;KAAAA,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = {\n  main: {\n    width:\"30%\", \n    background:\"#F2F1F9\", \n    border:\"none\", \n    padding:\"0.5rem\"\n  },\n  searchIcon: {\n    height: 30,\n    border: \"none\",\n    cursor: \"pointer\"\n  }\n};\n\nconst CheckBox = ({ setValue, placeholder, classes }) => {\n  const [query, setQuery] = useState('');\n\n  const typeArray=[\n    'small',\n    'medium',\n    'large',\n    'heliport',\n   \n   ]\n  const renderTypeOptions = () => ['all', ...typeArray];\n \n\n \n  \n  const handleFilterChange = e => {\n  \n      if(e.target.checked)\n      setValue(e.target.value)\n      else\n      setValue(query)\n\n    }\n\n  return (\n    typeArray.map(filter=>(\n      <Fragment>\n      <label htmlFor={filter.id}>{filter.type}</label>\n      <input type=\"checkbox\"\n      id={filter.id}\n        value={filter.type}\n        placeholder={placeholder}\n        onClick={handleFilterChange}\n       \n      />\n   \n    </Fragment>\n    ))\n \n  );\n}\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}