{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\smital.deopurkar\\\\Desktop\\\\training\\\\TableAssignment-master\\\\TableAssignment-master\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport TablePagination from './TablePagination';\nimport CheckBox from './CheckBox';\n\nconst Table = ({\n  renderRow,\n  entries,\n  header,\n  classes,\n  placeholder = '',\n  textfilterOptions = [],\n  checkoptions = [],\n  pageLimit\n}) => {\n  _s();\n\n  const [filter, setFilter] = useState([]);\n  const [page, setPage] = useState(0);\n\n  const doesIncludeEntry = entry => {\n    return filter.length > 0 ? textfilterOptions.filter(option => entry[option].toString().toLowerCase().type.includes(filter.toLowerCase())).length > 0 : true;\n  };\n\n  const getPaginatedEntries = entries => {\n    const offset = page * pageLimit;\n    return entries.slice(offset, offset + pageLimit);\n  };\n\n  const getFilteredEntries = () => {\n    return entries.filter(entry => doesIncludeEntry(entry));\n  }; // const getCheckboxFilteredEntries = () => {\n  //   let temp = entries.filter(entry => doesIncludeEntry(entry))\n  //  filteredEntries.push(temp)\n  //  return filteredEntries\n  // }\n\n\n  const renderEntries = () => {\n    return getPaginatedEntries(getFilteredEntries());\n  }; // onFilterChange(filter) {\n  //   const { filterList, activeFilter } = this.state;\n  //   if (filter === \"ALL\") {\n  //     if (activeFilter.length === filterList.length) {\n  //       this.setState({ activeFilter: [] });\n  //     } else {\n  //       this.setState({ activeFilter: filterList.map(filter => filter.value) });\n  //     }\n  //   } else {\n  //     if (activeFilter.includes(filter)) {\n  //       const filterIndex = activeFilter.indexOf(filter);\n  //       const newFilter = [...activeFilter];\n  //       newFilter.splice(filterIndex, 1);\n  //       this.setState({ activeFilter: newFilter });\n  //     } else {\n  //       this.setState({ activeFilter: [...activeFilter, filter] });\n  //     }\n  //   }\n  // }\n  // render() {\n  //   const { filterList, activeFilter } = this.state;\n  //   let filteredList;\n  //   if (\n  //     activeFilter.length === 0 ||\n  //     activeFilter.length === filterList.length\n  //   ) {\n  //     filteredList = this.state.searchLists;\n  //   } else {\n  //     filteredList = this.state.searchLists.filter(item =>\n  //       this.state.activeFilter.includes(item.type)\n  //     );\n  //   }\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Filter Airport \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(CheckBox, {\n        setValue: setFilter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n        class: \"search-title\",\n        children: \"Filter By Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n        setValue: setFilter,\n        placeholder: placeholder\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [header, renderEntries().map(entry => renderRow(entry))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      pageLimit: pageLimit,\n      pages: getFilteredEntries().length,\n      currentPage: page,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"OxvlNDJ557AzUbNZGKiBm6B8kws=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/smital.deopurkar/Desktop/training/TableAssignment-master/TableAssignment-master/src/components/Table.js"],"names":["React","useState","useEffect","SearchBar","TablePagination","CheckBox","Table","renderRow","entries","header","classes","placeholder","textfilterOptions","checkoptions","pageLimit","filter","setFilter","page","setPage","doesIncludeEntry","entry","length","option","toString","toLowerCase","type","includes","getPaginatedEntries","offset","slice","getFilteredEntries","renderEntries","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport TablePagination from './TablePagination';\nimport CheckBox from './CheckBox';\n\n\n\nconst Table = ({ renderRow, entries, header, classes, placeholder = '', textfilterOptions = [],  checkoptions=[], pageLimit }) => {\n  const [filter, setFilter] = useState([]);\n  const [page, setPage] = useState(0);\n  \n \n\n  const doesIncludeEntry = entry => {\n    \n    return filter.length > 0 ? textfilterOptions.filter(option => entry[option].toString().toLowerCase().type.includes(filter.toLowerCase())).length > 0 : true;\n  };\n\n  const getPaginatedEntries = entries => {\n  \n    const offset = page * pageLimit;\n    return entries.slice(offset, offset + pageLimit);\n  }\n\n  const getFilteredEntries = () => {\n    return entries.filter(entry => doesIncludeEntry(entry));\n  }\n\n  // const getCheckboxFilteredEntries = () => {\n  //   let temp = entries.filter(entry => doesIncludeEntry(entry))\n  //  filteredEntries.push(temp)\n  //  return filteredEntries\n  // }\n\n  const renderEntries = () => {\n    \n    return getPaginatedEntries(getFilteredEntries());\n  }\n \n  // onFilterChange(filter) {\n  //   const { filterList, activeFilter } = this.state;\n  //   if (filter === \"ALL\") {\n  //     if (activeFilter.length === filterList.length) {\n  //       this.setState({ activeFilter: [] });\n  //     } else {\n  //       this.setState({ activeFilter: filterList.map(filter => filter.value) });\n  //     }\n  //   } else {\n  //     if (activeFilter.includes(filter)) {\n  //       const filterIndex = activeFilter.indexOf(filter);\n  //       const newFilter = [...activeFilter];\n  //       newFilter.splice(filterIndex, 1);\n  //       this.setState({ activeFilter: newFilter });\n  //     } else {\n  //       this.setState({ activeFilter: [...activeFilter, filter] });\n  //     }\n  //   }\n  // }\n\n  // render() {\n  //   const { filterList, activeFilter } = this.state;\n  //   let filteredList;\n  //   if (\n  //     activeFilter.length === 0 ||\n  //     activeFilter.length === filterList.length\n  //   ) {\n  //     filteredList = this.state.searchLists;\n  //   } else {\n  //     filteredList = this.state.searchLists.filter(item =>\n  //       this.state.activeFilter.includes(item.type)\n  //     );\n  //   }\n  return (\n    <div>\n      <div>\n   <h1>Filter Airport </h1>\n   <h5>Type</h5>\n     <CheckBox\n      setValue={setFilter}\n     />\n   \n   <h5 class=\"search-title\">Filter By Search</h5>\n      <SearchBar \n        setValue={setFilter}\n        placeholder={placeholder}\n      />\n      </div>\n      <table >\n        {header}\n        {renderEntries().map(entry => renderRow(entry))}\n      </table>\n      <TablePagination \n        pageLimit={pageLimit}\n        pages={getFilteredEntries().length}\n        currentPage={page}\n        setPage={setPage}\n      />\n    </div>\n  )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}