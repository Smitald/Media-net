{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\smital.deopurkar\\\\Desktop\\\\training\\\\TableAssignment-master\\\\TableAssignment-master\\\\src\\\\components\\\\CheckBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\n\nconst CheckBox = ({\n  setValue,\n  placeholder,\n  classes\n}) => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const filterList = [{\n    id: 1,\n    type: \"small\"\n  }, {\n    id: 2,\n    type: \"medium\"\n  }, {\n    id: 3,\n    type: \"large\"\n  }, {\n    id: 4,\n    type: \"heliport\"\n  }];\n\n  const onFilterChange = filter => {\n    // const { filterList, activeFilter } = useState([]);\n    const activeFilter = [];\n\n    if (activeFilter.includes(filter)) {\n      const filterIndex = activeFilter.indexOf(filter);\n      const newFilter = [...activeFilter];\n      newFilter.splice(filterIndex, 1);\n      this.setState({\n        activeFilter: newFilter\n      });\n    }\n  };\n\n  return filterList.map(filter => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: filter.id,\n      children: filter.type\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 15\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      id: filter.id,\n      value: filter.type,\n      placeholder: placeholder,\n      onClick: () => onFilterChange(filter.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 7\n  }, this));\n};\n\n_s(CheckBox, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n\n_c = CheckBox;\nexport default CheckBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"CheckBox\");","map":{"version":3,"sources":["C:/Users/smital.deopurkar/Desktop/training/TableAssignment-master/TableAssignment-master/src/components/CheckBox.js"],"names":["React","useState","Fragment","CheckBox","setValue","placeholder","classes","query","setQuery","filterList","id","type","onFilterChange","filter","activeFilter","includes","filterIndex","indexOf","newFilter","splice","setState","map","value"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,WAAZ;AAAyBC,EAAAA;AAAzB,CAAD,KAAwC;AAAA;;AACvD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAGA,QAAMQ,UAAU,GAAC,CACf;AAACC,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC;AAAX,GADe,EAEf;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC;AAAX,GAFe,EAGf;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC;AAAX,GAHe,EAIf;AAACD,IAAAA,EAAE,EAAC,CAAJ;AAAMC,IAAAA,IAAI,EAAC;AAAX,GAJe,CAAjB;;AAQA,QAAMC,cAAc,GAAGC,MAAM,IAAI;AAChC;AACD,UAAMC,YAAY,GAAE,EAApB;;AACE,QAAIA,YAAY,CAACC,QAAb,CAAsBF,MAAtB,CAAJ,EAAmC;AACjC,YAAMG,WAAW,GAAGF,YAAY,CAACG,OAAb,CAAqBJ,MAArB,CAApB;AACA,YAAMK,SAAS,GAAG,CAAC,GAAGJ,YAAJ,CAAlB;AACAI,MAAAA,SAAS,CAACC,MAAV,CAAiBH,WAAjB,EAA8B,CAA9B;AACA,WAAKI,QAAL,CAAc;AAAEN,QAAAA,YAAY,EAAEI;AAAhB,OAAd;AACD;AACF,GATD;;AAUA,SACET,UAAU,CAACY,GAAX,CAAeR,MAAM,iBACnB,QAAC,QAAD;AAAA,4BACQ;AAAO,MAAA,OAAO,EAAEA,MAAM,CAACH,EAAvB;AAAA,gBAA4BG,MAAM,CAACF;AAAnC;AAAA;AAAA;AAAA;AAAA,YADR,eAEA;AAAO,MAAA,IAAI,EAAC,UAAZ;AACA,MAAA,EAAE,EAAEE,MAAM,CAACH,EADX;AAEE,MAAA,KAAK,EAAEG,MAAM,CAACF,IAFhB;AAGE,MAAA,WAAW,EAAEN,WAHf;AAIE,MAAA,OAAO,EAAE,MAAMO,cAAc,CAACC,MAAM,CAACS,KAAR;AAJ/B;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF;AAgBD,CAtCD;;GAAMnB,Q;;KAAAA,Q;AAwCN,eAAeA,QAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\n\n\nconst CheckBox = ({ setValue, placeholder, classes }) => {\n  const [query, setQuery] = useState('');\n\n\n  const filterList=[\n    {id:1,type:\"small\"},\n    {id:2,type:\"medium\"},\n    {id:3,type:\"large\"},\n    {id:4,type:\"heliport\"}\n  \n  ]\n  \n  const onFilterChange = filter => {\n   // const { filterList, activeFilter } = useState([]);\n  const activeFilter= []\n    if (activeFilter.includes(filter)) {\n      const filterIndex = activeFilter.indexOf(filter);\n      const newFilter = [...activeFilter];\n      newFilter.splice(filterIndex, 1);\n      this.setState({ activeFilter: newFilter });\n    } \n  }\n  return (\n    filterList.map(filter=>(\n      <Fragment>\n              <label htmlFor={filter.id}>{filter.type}</label>\n      <input type=\"checkbox\"\n      id={filter.id}\n        value={filter.type}\n        placeholder={placeholder}\n        onClick={() => onFilterChange(filter.value)}\n       \n      />\n   \n    </Fragment>\n    ))\n \n  );\n}\n\nexport default CheckBox;\n"]},"metadata":{},"sourceType":"module"}