{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\smital.deopurkar\\\\Desktop\\\\training\\\\TableAssignment-master\\\\TableAssignment-master\\\\src\\\\components\\\\Table.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport TablePagination from './TablePagination';\nimport CheckBox from './CheckBox';\n\nconst Table = ({\n  renderRow,\n  entries,\n  header,\n  classes,\n  placeholder = '',\n  textfilterOptions = [],\n  checkoptions = [],\n  pageLimit\n}) => {\n  _s();\n\n  const [filter, setFilter] = useState('');\n  const [page, setPage] = useState(0);\n  var filteredEntries = [];\n\n  const doesIncludeEntry = entry => {\n    return filter.length > 0 ? textfilterOptions.filter(option => entry[option].toString().toLowerCase().includes(filter.toLowerCase())).length > 0 : true;\n  };\n\n  const getPaginatedEntries = entries => {\n    const offset = page * pageLimit;\n    return entries.slice(offset, offset + pageLimit);\n  };\n\n  const getFilteredEntries = () => {\n    return entries.filter(entry => doesIncludeEntry(entry));\n  };\n\n  const getCheckboxFilteredEntries = () => {\n    let temp = entries.filter(entry => doesIncludeEntry(entry));\n    filteredEntries.push(temp);\n    return filteredEntries;\n  };\n\n  const renderEntries = () => {\n    return getPaginatedEntries(getFilteredEntries());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CheckBox, {\n      setValue: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(SearchBar, {\n      setValue: setFilter,\n      placeholder: placeholder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [header, renderEntries().map(entry => renderRow(entry))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      pageLimit: pageLimit,\n      pages: getFilteredEntries().length,\n      currentPage: page,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Table, \"8LSHPBMcU/hXkP+49VYtmY1ncIc=\");\n\n_c = Table;\nexport default Table;\n\nvar _c;\n\n$RefreshReg$(_c, \"Table\");","map":{"version":3,"sources":["C:/Users/smital.deopurkar/Desktop/training/TableAssignment-master/TableAssignment-master/src/components/Table.js"],"names":["React","useState","useEffect","SearchBar","TablePagination","CheckBox","Table","renderRow","entries","header","classes","placeholder","textfilterOptions","checkoptions","pageLimit","filter","setFilter","page","setPage","filteredEntries","doesIncludeEntry","entry","length","option","toString","toLowerCase","includes","getPaginatedEntries","offset","slice","getFilteredEntries","getCheckboxFilteredEntries","temp","push","renderEntries","map"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAIA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA,MAAtB;AAA8BC,EAAAA,OAA9B;AAAuCC,EAAAA,WAAW,GAAG,EAArD;AAAyDC,EAAAA,iBAAiB,GAAG,EAA7E;AAAkFC,EAAAA,YAAY,GAAC,EAA/F;AAAmGC,EAAAA;AAAnG,CAAD,KAAoH;AAAA;;AAChI,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACgB,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,CAAD,CAAhC;AAEF,MAAIkB,eAAe,GAAG,EAAtB;;AAEE,QAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAEhC,WAAON,MAAM,CAACO,MAAP,GAAgB,CAAhB,GAAoBV,iBAAiB,CAACG,MAAlB,CAAyBQ,MAAM,IAAIF,KAAK,CAACE,MAAD,CAAL,CAAcC,QAAd,GAAyBC,WAAzB,GAAuCC,QAAvC,CAAgDX,MAAM,CAACU,WAAP,EAAhD,CAAnC,EAA0GH,MAA1G,GAAmH,CAAvI,GAA2I,IAAlJ;AACD,GAHD;;AAKA,QAAMK,mBAAmB,GAAGnB,OAAO,IAAI;AAErC,UAAMoB,MAAM,GAAGX,IAAI,GAAGH,SAAtB;AACA,WAAON,OAAO,CAACqB,KAAR,CAAcD,MAAd,EAAsBA,MAAM,GAAGd,SAA/B,CAAP;AACD,GAJD;;AAMA,QAAMgB,kBAAkB,GAAG,MAAM;AAC/B,WAAOtB,OAAO,CAACO,MAAR,CAAeM,KAAK,IAAID,gBAAgB,CAACC,KAAD,CAAxC,CAAP;AACD,GAFD;;AAIA,QAAMU,0BAA0B,GAAG,MAAM;AACvC,QAAIC,IAAI,GAAGxB,OAAO,CAACO,MAAR,CAAeM,KAAK,IAAID,gBAAgB,CAACC,KAAD,CAAxC,CAAX;AACDF,IAAAA,eAAe,CAACc,IAAhB,CAAqBD,IAArB;AACA,WAAOb,eAAP;AACA,GAJD;;AAMA,QAAMe,aAAa,GAAG,MAAM;AAE1B,WAAOP,mBAAmB,CAACG,kBAAkB,EAAnB,CAA1B;AACD,GAHD;;AAMA,sBACE;AAAA,4BAEC,QAAC,QAAD;AACC,MAAA,QAAQ,EAAEd;AADX;AAAA;AAAA;AAAA;AAAA,YAFD,eAOE,QAAC,SAAD;AACE,MAAA,QAAQ,EAAEA,SADZ;AAEE,MAAA,WAAW,EAAEL;AAFf;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE;AAAA,iBACGF,MADH,EAEGyB,aAAa,GAAGC,GAAhB,CAAoBd,KAAK,IAAId,SAAS,CAACc,KAAD,CAAtC,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAeE,QAAC,eAAD;AACE,MAAA,SAAS,EAAEP,SADb;AAEE,MAAA,KAAK,EAAEgB,kBAAkB,GAAGR,MAF9B;AAGE,MAAA,WAAW,EAAEL,IAHf;AAIE,MAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD,CAzDD;;GAAMZ,K;;KAAAA,K;AA2DN,eAAeA,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport SearchBar from './SearchBar';\nimport TablePagination from './TablePagination';\nimport CheckBox from './CheckBox';\n\n\n\nconst Table = ({ renderRow, entries, header, classes, placeholder = '', textfilterOptions = [],  checkoptions=[], pageLimit }) => {\n  const [filter, setFilter] = useState('');\n  const [page, setPage] = useState(0);\n  \nvar filteredEntries = []\n\n  const doesIncludeEntry = entry => {\n    \n    return filter.length > 0 ? textfilterOptions.filter(option => entry[option].toString().toLowerCase().includes(filter.toLowerCase())).length > 0 : true;\n  };\n\n  const getPaginatedEntries = entries => {\n  \n    const offset = page * pageLimit;\n    return entries.slice(offset, offset + pageLimit);\n  }\n\n  const getFilteredEntries = () => {\n    return entries.filter(entry => doesIncludeEntry(entry));\n  }\n\n  const getCheckboxFilteredEntries = () => {\n    let temp = entries.filter(entry => doesIncludeEntry(entry))\n   filteredEntries.push(temp)\n   return filteredEntries\n  }\n\n  const renderEntries = () => {\n    \n    return getPaginatedEntries(getFilteredEntries());\n  }\n \n \n  return (\n    <div>\n   \n     <CheckBox\n      setValue={setFilter}\n     />\n   \n    \n      <SearchBar \n        setValue={setFilter}\n        placeholder={placeholder}\n      />\n      <table >\n        {header}\n        {renderEntries().map(entry => renderRow(entry))}\n      </table>\n      <TablePagination \n        pageLimit={pageLimit}\n        pages={getFilteredEntries().length}\n        currentPage={page}\n        setPage={setPage}\n      />\n    </div>\n  )\n}\n\nexport default Table;"]},"metadata":{},"sourceType":"module"}